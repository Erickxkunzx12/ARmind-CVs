#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import os
import psycopg2
from dotenv import load_dotenv

# Cargar variables de entorno
load_dotenv()

print("=== Prueba Simple de Conexi√≥n a PostgreSQL ===")

def test_basic_connection():
    """Prueba de conexi√≥n b√°sica con credenciales simples"""
    try:
        print("Probando conexi√≥n b√°sica...")
        conn = psycopg2.connect(
            host=os.getenv('DB_HOST', 'localhost'),
            database=os.getenv('DB_NAME', 'cv_analyzer'),
            user=os.getenv('DB_USER', 'postgres'),
            password=os.getenv('DB_PASSWORD'),
            port=os.getenv('DB_PORT', '5432')
        )
        print("‚úÖ Conexi√≥n exitosa con credenciales b√°sicas")
        conn.close()
        return True
    except Exception as e:
        print(f"‚ùå Error con credenciales b√°sicas: {e}")
        return False

def test_env_connection():
    """Prueba de conexi√≥n usando variables de entorno"""
    try:
        print("Probando conexi√≥n con variables de entorno...")
        
        # Check if required environment variables are set
        required_vars = ['DB_PASSWORD']
        missing_vars = [var for var in required_vars if not os.getenv(var)]
        if missing_vars:
            print(f"‚ùå Variables de entorno faltantes: {missing_vars}")
            return False
            
        conn = psycopg2.connect(
            host=os.getenv('DB_HOST', 'localhost'),
            database=os.getenv('DB_NAME', 'cv_analyzer'),
            user=os.getenv('DB_USER', 'postgres'),
            password=os.getenv('DB_PASSWORD'),
            port=os.getenv('DB_PORT', '5432')
        )
        print("‚úÖ Conexi√≥n exitosa con variables de entorno")
        conn.close()
        return True
        
    except Exception as e:
        print(f"‚ùå Error con variables de entorno: {e}")
        return False

def main():
    """Funci√≥n principal para ejecutar las pruebas"""
    print("\n--- Prueba 1: Conexi√≥n b√°sica ---")
    basic_success = test_basic_connection()
    
    print("\n--- Prueba 2: Conexi√≥n con variables de entorno ---")
    env_success = test_env_connection()
    
    if not basic_success and not env_success:
        print("\nüîç Diagn√≥stico:")
        print("- Verifica que PostgreSQL est√© ejecut√°ndose")
        print("- Verifica que la base de datos 'cv_analyzer' exista")
        print("- Verifica que el usuario 'postgres' tenga acceso")
        print("- Configura las variables de entorno en el archivo .env")
        
if __name__ == "__main__":
    main()